/*
class Node {
    int data;
    Node left, right;

    Node(int item) {
        data = item;
        left = right = null;
    }
}
*/
class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(Node root) {
        // Your code here
        //result arraylist
        ArrayList<ArrayList<Integer>> res=new ArrayList<>();
        //stores currlevel of tree
        ArrayList <Integer> currlevel=new ArrayList<>();
        Queue <Node> q=new LinkedList<>();
        q.add(root);
        q.add(null);
        while(!q.isEmpty()){
            Node currNode=q.remove();
            if(currNode==null){
                res.add(currlevel);
                currlevel=new ArrayList<>();
            if(q.isEmpty()){
                break;
            }
            else{
                q.add(null);
            }
            }
            else{
                currlevel.add(currNode.data);
            if(currNode.left!=null){
                q.add(currNode.left);
            }
            if(currNode.right!=null){
                q.add(currNode.right);
            }
            }
        }
        return res;
    }
}