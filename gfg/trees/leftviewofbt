/* A Binary Tree node
class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/
class Solution {
    // Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root) {
        // code here
        ArrayList <Integer> res=new ArrayList<>();
        ArrayList <Integer> cl=new ArrayList<>();
        Queue <Node> q=new LinkedList<>();
        q.add(root);
        q.add(null);
        if(root==null){
            return res;
        }
        while(!q.isEmpty()){
            Node curr=q.remove();
            if(curr==null){
                if(!cl.isEmpty()){
                res.add(cl.get(0));
                }
                cl=new ArrayList<>();
                if(q.isEmpty()){
                    break;
                }
                else{
                    q.add(null);
                }
            }
            else{
            cl.add(curr.data);
            if(curr.left!=null){
                q.add(curr.left);
            }
            if(curr.right!=null){
                q.add(curr.right);
            }
            }
            
        }
        return res;
    }
}